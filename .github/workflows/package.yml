name: package

on:
    #   We build semver tags, and the master branch.
    push:
        branches: [ master ]
        tags:
            -   '[0-9]+.[0-9]+.[0-9]+'

    #   TODO: this does not need to run on every PR.
    pull_request:
        branches: [ master ]

jobs:
    macos:
        runs-on: macos-14
        name: macOS
        env:
            AWS_S3_ACCESS_SECRET: ${{ secrets.AWS_S3_ACCESS_SECRET }}

            DEVELOPER_DIR: "/Applications/Xcode_15.3.app/Contents/Developer"

            UNIDOC_ENABLE_INDEXSTORE: "1"
            # According to
            # https://github.com/actions/runner-images/tree/main#available-images ,
            # the `macos-14` runner is always aarch64.
            UNIDOC_PLATFORM: "macos-aarch64"
            UNIDOC_VERSION: ${{ github.head_ref || github.ref_name }}

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Build products
                run: |
                    swift --version
                    swift build -c release \
                        --product unidoc-publish \
                        --product unidoc-tools

            -   name: Upload products
                run: |
                    .build/release/unidoc-publish \
                        unidoc-tools \
                        /unidoc/$UNIDOC_VERSION/$UNIDOC_PLATFORM/unidoc \
                        --secret "$AWS_S3_ACCESS_SECRET"

    linux:
        runs-on: ubuntu-24.04
        name: Ubuntu 24.04

        env:
            AWS_S3_ACCESS_SECRET: ${{ secrets.AWS_S3_ACCESS_SECRET }}

            SWIFT_PREFIX: "swift-5.10.1-release/ubuntu2404/swift-5.10.1-RELEASE"
            SWIFT_ID: "swift-5.10.1-RELEASE-ubuntu24.04"

            # Note that $(uname -i) cannot appear here, because it is not actually expandable
            # in an `env` block.
            UNIDOC_ENABLE_INDEXSTORE: "1"
            UNIDOC_PLATFORM: "linux"
            UNIDOC_VERSION: ${{ github.head_ref || github.ref_name }}

        steps:
            -   name: Cache Swift toolchain
                uses: actions/cache@v2
                with:
                    path: ${{ env.SWIFT_ID }}.tar.gz
                    key: ${{ env.SWIFT_ID }}

            -   name: Cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: ${{ env.SWIFT_ID }}.tar.gz

            -   name: Download Swift
                if: steps.cache_status.outputs.files_exists == 'false'
                run: |
                    curl https://download.swift.org/$SWIFT_PREFIX/$SWIFT_ID.tar.gz \
                        --output $SWIFT_ID.tar.gz

            -   name: Set up Swift
                run: |
                    mkdir -p $HOME/$SWIFT_ID
                    tar -xzf $SWIFT_ID.tar.gz -C $HOME/$SWIFT_ID --strip 1
                    echo "$HOME/$SWIFT_ID/usr/bin" >> $GITHUB_PATH
                    cat $GITHUB_PATH

            #   This clobbers everything in the current directory, which is why we installed
            #   the Swift toolchain in the home directory.
            -   name: Checkout repository
                uses: actions/checkout@v3

            #   For some reason, Swift on Linux will not build all the products in one
            #   invocation. We pass the same flags to both invocations to speed up the build.
            -   name: Build products
                run: |
                    swift --version
                    swift build -c release \
                        --static-swift-stdlib \
                        --product unidoc-publish \
                        -Xcxx -I$HOME/$SWIFT_ID/usr/lib/swift \
                        -Xcxx -I$HOME/$SWIFT_ID/usr/lib/swift/Block
                    swift build -c release \
                        --static-swift-stdlib \
                        --product unidoc-tools \
                        -Xcxx -I$HOME/$SWIFT_ID/usr/lib/swift \
                        -Xcxx -I$HOME/$SWIFT_ID/usr/lib/swift/Block

            -   name: Upload products
                run: |
                    .build/release/unidoc-publish \
                        unidoc-tools \
                        /unidoc/$UNIDOC_VERSION/$UNIDOC_PLATFORM-$(uname -i)/unidoc \
                        --secret "$AWS_S3_ACCESS_SECRET"

