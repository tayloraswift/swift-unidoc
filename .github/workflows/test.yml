# This workflow builds the project for production, with IndexStoreDB integration enabled.
name: test

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    server:
        runs-on: ubuntu-24.04
        name: Linux
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up mock deployments
                run: |
                    docker compose -f Guides/docs.docc/local/docker-compose.yml up -d

            -   name: Initialize replica set
                run: |
                    timeout 60s bash -c \
                    'until docker exec -t unidoc-mongod-container \
                    /bin/mongosh --file /unidoc-rs-init-containerized.js; do sleep 1; done'

            -   name: Run pipeline
                run: |
                    docker run -t --rm \
                        --network=unidoc-test \
                        --name swift-environment \
                        --user root \
                        -v $PWD:/swift/swift-unidoc \
                        -w /swift/swift-unidoc \
                        swift:6.0-noble \
                        /bin/bash .github/pipeline

    macos:
        runs-on: macos-14
        name: macOS
        env:
            UNIDOC_ENABLE_INDEXSTORE: "1"

        steps:
            -   name: Install Swift 6.0
                uses: tayloraswift/swift-install-action@master
                with:
                    swift-prefix: "swift-6.0-release/xcode/swift-6.0-RELEASE"
                    swift-id: "swift-6.0-RELEASE"

            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Build debug
                run: |
                    swift --version
                    swift build

            -   name: Build release
                run: |
                    swift build -c release

            -   name: Test SymbolGraphBuilder
                run: |
                    swift run -c release SymbolGraphBuilderTests
